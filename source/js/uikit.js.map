{"version":3,"sources":["uikit.js"],"names":["UIKIT","accordion","setAriaRoles","element","target","state","setAttribute","toggleClasses","openingClass","closingClass","oldClass","newClass","removeClass","addClass","className","classList","remove","replace","RegExp","split","join","add","Toggle","elements","speed","window","event","cancelBubble","stopPropagation","error","length","undefined","i","targetId","getAttribute","document","getElementById","style","display","animate","property","prefunction","postfunction","Open","height","getComputedStyle","currentStyle","parseInt","Run","endSize","callback","Close","module","exports","CalculateAnimationSpecs","initialSize","stepSize","steps","intervalTime","distance","Math","abs","ceil","GetCSSPropertyBecauseIE","space","CalculateAuto","dimension","clientHeight","clientWidth","Stop","clearInterval","UIKITanimation","options","UIKITinteration","UIKITinterations","animationSpecs","iterateCounter","UIKITtoggleState","setInterval","closeSize","openSize","UIKITtoggleInteration","UIKITtoggleInterations","targetSize","preState","postState","currentSize","Error","returnParam"],"mappings":"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","file":"uikit.js","sourcesContent":["/*! @gov.au/accordion v0.1.0 */\n/***************************************************************************************************************************************************************\n *\n * Accordion function\n *\n * A component to allow users to show or hide page elements.\n *\n **************************************************************************************************************************************************************/\n\nvar UIKIT = UIKIT || {};\n\n( function( UIKIT ) {\n\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------\n// NAMESPACE MODULE\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------\n\tvar accordion = {}\n\n\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------\n// PRIVATE FUNCTIONS\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t/**\n\t * PRIVATE\n\t * Set the correct Aria roles for given element on the accordion title and body\n\t *\n\t * @param  {object} element  - The DOM element we want to set attributes for\n\t * @param  {object} target   - The DOM element we want to set attributes for\n\t * @param  {string} state    - The DOM element we want to set attributes for\n\t */\n\tfunction setAriaRoles( element, target, state ) {\n\n\t\tif( state === 'closing' ) {\n\t\t\ttarget.setAttribute( 'aria-hidden', true );\n\t\t\telement.setAttribute( 'aria-expanded', false );\n\t\t\telement.setAttribute( 'aria-selected', false );\n\t\t}\n\t\telse {\n\t\t\ttarget.setAttribute( 'aria-hidden', false );\n\t\t\telement.setAttribute( 'aria-expanded', true );\n\t\t\telement.setAttribute( 'aria-selected', true );\n\t\t}\n\t}\n\n\n\t/**\n\t * PRIVATE\n\t * IE8 compatible function for replacing classes on a DOM node\n\t *\n\t * @param  {object} element       - The DOM element we want to toggle classes on\n\t * @param  {object} target        - The DOM element we want to toggle classes on\n\t * @param  {object} state         - The current state of the animation on the element\n\t * @param  {string} openingClass  - The firstClass you want to toggle on the DOM node\n\t * @param  {string} closingClass  - The secondClass you want to toggle on the DOM node\n\t */\n\tfunction toggleClasses( element, state, openingClass, closingClass ) {\n\n\t\tif( state === 'opening' || state === 'open' ) {\n\t\t\tvar oldClass = openingClass || 'uikit-accordion--closed';\n\t\t\tvar newClass = closingClass || 'uikit-accordion--open';\n\t\t}\n\t\telse {\n\t\t\tvar oldClass = closingClass || 'uikit-accordion--open';\n\t\t\tvar newClass = openingClass || 'uikit-accordion--closed';\n\t\t}\n\n\t\tremoveClass( element, oldClass );\n\t\taddClass( element, newClass );\n\t}\n\n\n\t/**\n\t * PRIVATE\n\t * IE8 compatible function for removing a class\n\t *\n\t * @param  {object} element   - The DOM element we want to manipulate\n\t * @param  {object} className - The name of the class to be removed\n\t */\n\tfunction removeClass( element, className ) {\n\t\tif( element.classList ) {\n\t\t\telement.classList.remove( className );\n\t\t}\n\t\telse {\n\t\t\telement.className = element.className.replace( new RegExp(\"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\", \"gi\"), \" \" );\n\t\t}\n\t}\n\n\n\t/**\n\t * PRIVATE\n\t * IE8 compatible function for adding a class\n\t *\n\t * @param  {object} element   - The DOM element we want to manipulate\n\t * @param  {object} className - The name of the class to be added\n\t */\n\tfunction addClass( element, className ) {\n\t\tif( element.classList ) {\n\t\t\telement.classList.add( className );\n\t\t}\n\t\telse {\n\t\t\telement.className = element.className + \" \" + className;\n\t\t}\n\t}\n\n\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------\n// PUBLIC FUNCTIONS\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t/**\n\t * Toggle an accordion element\n\t *\n\t * @param  {string}  elements  - The DOM node/s to toggle\n\t * @param  {integer} speed     - The speed in ms for the animation\n\t *\n\t */\n\taccordion.Toggle = function( elements, speed ) {\n\n\t\t// stop event propagation\n\t\ttry {\n\t\t\twindow.event.cancelBubble = true;\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\tcatch( error ) {}\n\n\t\tif( elements.length === undefined ) {\n\t\t\telements = [ elements ];\n\t\t}\n\n\t\tfor( var i = 0; i < elements.length; i++ ) {\n\n\t\t\tvar element = elements[ i ];\n\t\t\tvar targetId = element.getAttribute('aria-controls');\n\t\t\tvar target = document.getElementById( targetId );\n\n\t\t\ttarget.style.display = 'block';\n\n\t\t\t(function( element ) {\n\t\t\t\tUIKIT.animate.Toggle({\n\t\t\t\t\telement: target,\n\t\t\t\t\tproperty: 'height',\n\t\t\t\t\tspeed: speed || 250,\n\t\t\t\t\tprefunction: function( target, state ) {\n\t\t\t\t\t\tif( state === 'opening' ) {\n\t\t\t\t\t\t\ttarget.style.display = 'block';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetAriaRoles( element, target, state );\n\t\t\t\t\t\ttoggleClasses( element, state );\n\t\t\t\t\t},\n\t\t\t\t\tpostfunction: function( target, state ) {\n\t\t\t\t\t\tif( state === 'closed' ) {\n\t\t\t\t\t\t\ttarget.style.display = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttoggleClasses( target, state );\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t})( element );\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\n\t/**\n\t * Open a group of accordion elements\n\t *\n\t * @param  {string}  elements  - The DOM node/s to toggle\n\t * @param  {integer} speed     - The speed in ms for the animation\n\t *\n\t */\n\taccordion.Open = function( elements, speed ) {\n\n\t\t// stop event propagation\n\t\ttry {\n\t\t\twindow.event.cancelBubble = true;\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\tcatch( error ) {}\n\n\t\tif( elements.length === undefined ) {\n\t\t\telements = [ elements ];\n\t\t}\n\n\t\tfor( var i = 0; i < elements.length; i++ ) {\n\n\t\t\tvar element = elements[ i ];\n\t\t\tvar targetId = element.getAttribute('aria-controls');\n\t\t\tvar target = document.getElementById( targetId );\n\n\t\t\t// let’s find out if this accordion is still closed\n\t\t\tvar height = 0;\n\t\t\tif( typeof getComputedStyle !== 'undefined' ) {\n\t\t\t\theight = window.getComputedStyle( target ).height;\n\t\t\t}\n\t\t\telse {\n\t\t\t\theight = target.currentStyle.height;\n\t\t\t}\n\n\t\t\tif( parseInt( height ) === 0 ) {\n\t\t\t\ttarget.style.height = '0px';\n\t\t\t}\n\n\t\t\ttarget.style.display = '';\n\t\t\ttoggleClasses( target, 'opening' );\n\t\t\ttoggleClasses( element, 'opening' );\n\t\t\tsetAriaRoles( element, target, 'opening' );\n\n\t\t\t(function( target, speed, element ) {\n\t\t\t\tUIKIT.animate.Run({\n\t\t\t\t\telement: target,\n\t\t\t\t\tproperty: 'height',\n\t\t\t\t\tendSize: 'auto',\n\t\t\t\t\tspeed: speed || 250,\n\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\ttoggleClasses( element, 'opening' );\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t})( target, speed, element );\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Close a group of accordion elements\n\t *\n\t * @param  {string}  elements  - The DOM node/s to toggle\n\t * @param  {integer} speed     - The speed in ms for the animation\n\t *\n\t */\n\taccordion.Close = function( elements, speed ) {\n\n\t\t// stop event propagation\n\t\ttry {\n\t\t\twindow.event.cancelBubble = true;\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\tcatch( error ) {}\n\n\t\tif( elements.length === undefined ) {\n\t\t\telements = [ elements ];\n\t\t}\n\n\t\tfor( var i = 0; i < elements.length; i++ ) {\n\n\t\t\tvar element = elements[ i ];\n\t\t\tvar targetId = element.getAttribute('aria-controls');\n\t\t\tvar target = document.getElementById( targetId );\n\n\t\t\ttoggleClasses( element, 'closing' );\n\t\t\tsetAriaRoles( element, target, 'closing' );\n\n\t\t\t(function( target, speed ) {\n\t\t\t\tUIKIT.animate.Run({\n\t\t\t\t\telement: target,\n\t\t\t\t\tproperty: 'height',\n\t\t\t\t\tendSize: 0,\n\t\t\t\t\tspeed: speed || 250,\n\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\ttarget.style.display = 'none';\n\t\t\t\t\t\ttoggleClasses( target, 'close' );\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t})( target, speed );\n\t\t}\n\n\t}\n\n\n\tUIKIT.accordion = accordion;\n\n}( UIKIT ));\n\n\nif( typeof module !== 'undefined' ) {\n\tmodule.exports = UIKIT;\n}\n\r\n/*! @gov.au/animate v0.1.3 */\n/***************************************************************************************************************************************************************\n *\n * Animate function\n *\n * A function to open, close and toggle the display of page elements.\n *\n **************************************************************************************************************************************************************/\n\nvar UIKIT = UIKIT || {};\n\n( function( UIKIT ) {\n\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------\n// NAMESPACE MODULE\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------\n\tvar animate = {}\n\n\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------\n// PRIVATE FUNCTIONS\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t/**\n\t * PRIVATE\n\t * Calculate the requirements for the desired animation\n\t *\n\t * @param  {integer} initialSize - The initial size of the element to animate\n\t * @param  {integer} endSize     - The size the element after the animation completes\n\t * @param  {string}  speed       - The speed of the animation in ms\n\t *\n\t * @return {object}              - Required steps, stepSize and intervalTime for the animation\n\t */\n\tfunction CalculateAnimationSpecs( initialSize, endSize, speed ) {\n\n\t\tif( initialSize === endSize ) {\n\t\t\treturn {\n\t\t\t\tstepSize: 0,\n\t\t\t\tsteps: 0,\n\t\t\t\tintervalTime: 0,\n\t\t\t};\n\t\t}\n\n\t\tvar distance = endSize - initialSize;        // the overall distance the animation needs to travel\n\t\tvar intervalTime = ( speed / distance );     // the time each setInterval iteration will take\n\t\tvar stepSize = distance < 0 ? -1 : 1;        // if distance is negative then we set stepSize to -1\n\t\tvar steps = Math.abs( distance / stepSize ); // the amount of steps required to get to endSize\n\t\tintervalTime = speed / steps;\n\n\t\t// we need to adjust our animation specs if interval time exceeds 60FPS eg intervalTime < 16.67ms\n\t\tif( Math.abs( intervalTime ) < ( 1000 / 60 ) ) {\n\t\t\tintervalTime = ( 1000 / 60 );                          // let’s not get lower that 60FPS\n\t\t\tsteps = Math.ceil( Math.abs( speed / intervalTime ) ); // we now need the steps and make sure we ceil them so -1 won't make them negative\n\t\t\tstepSize = distance / steps;                           // last thing is step sizes which are derived from all of the above\n\t\t}\n\n\t\treturn {\n\t\t\tstepSize: stepSize,\n\t\t\tsteps: ( steps - 1 ),\n\t\t\tintervalTime: intervalTime,\n\t\t};\n\t}\n\n\t// export for node and babel environments\n\tif( typeof module !== 'undefined' ) {\n\t\tanimate.CalculateAnimationSpecs = CalculateAnimationSpecs;\n\t}\n\n\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------\n// PUBLIC FUNCTIONS\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t/**\n\t * Getting computed CSS styles from normal browsers and IE\n\t *\n\t * @param {object} element  - The DOM element we want to get the computed style from\n\t * @param {string} property - The CSS property\n\t *\n\t * @return {string|integer} - The CSS value for the property\n\t */\n\tanimate.GetCSSPropertyBecauseIE = function( element, property ) {\n\t\tif( typeof getComputedStyle !== 'undefined' ) {\n\t\t\treturn window.getComputedStyle( element )[ property ];\n\t\t}\n\t\telse {\n\t\t\tvar space = element.currentStyle[ property ];\n\n\t\t\tif( space === 'auto' ) {\n\t\t\t\tspace = UIKIT.animate.CalculateAuto( element, property );\n\t\t\t}\n\n\t\t\treturn space;\n\t\t}\n\t};\n\n\n\t/**\n\t * Calculate the size of the element when it’s dimension(height or width) is set to auto\n\t *\n\t * @param  {object} element   - The element to read auto height from\n\t * @param  {string} dimension - The dimension to measure\n\t *\n\t * @return {integer}          - The size of the element when at dimension(height or width) is set to 'auto'\n\t */\n\tanimate.CalculateAuto = function( element, dimension ) {\n\t\tvar initialSize;\n\t\tvar endSize;\n\n\t\tif( dimension === 'height' ) {\n\t\t\tinitialSize = element.clientHeight;              // get current height\n\t\t\telement.style[ dimension ] = 'auto';             // set height to auto\n\t\t\tendSize = element.clientHeight;                  // get height again\n\t\t\telement.style[ dimension ] = initialSize + 'px'; // set back to initial height\n\t\t}\n\t\telse {\n\t\t\tinitialSize = element.clientWidth;\n\t\t\telement.style[ dimension ] = 'auto';\n\t\t\tendSize = element.clientWidth;\n\t\t\telement.style[ dimension ] = initialSize + 'px';\n\t\t}\n\n\t\treturn parseInt( endSize );\n\t};\n\n\n\t/**\n\t * Stop any uikit animation on a DOM element\n\t *\n\t * @param  {object} element - The element to stop animating\n\t */\n\tanimate.Stop = function ( element ) {\n\t\tclearInterval( element.UIKITanimation );\n\t};\n\n\n\t/**\n\t * The magical animation function\n\t *\n\t * @param  {object}         options          - The options for the animation\n\t * @param  {object}         options.element  - Element/s we are animating (DOM nodes)\n\t * @param  {string}         options.property - The CSS property to animate\n\t * @param  {integer|string} options.endSize  - The size the element should animate to. Can be 'auto' or pixel value\n\t * @param  {integer}        options.speed    - The speed of the animation in milliseconds [optional] [default: 250]\n\t * @param  {function}       options.callback - A function to be executed after the animation ends [optional]\n\t *\n\t * @return {unknown}                         - The return value passed on from our options.callback function [optional]\n\t */\n\tanimate.Run = function( options ) {\n\t\t// defaults\n\t\tvar elements = options.element;\n\t\tvar speed = options.speed || 250;\n\n\t\t// making a single DOM element iteratable\n\t\tif( elements.length === undefined ) {\n\t\t\telements = [ elements ];\n\t\t}\n\n\t\t// making a callback if none was provided\n\t\tif( typeof options.callback !== 'function' ) {\n\t\t\toptions.callback = function() {};\n\t\t}\n\n\t\t// adding iteration counts\n\t\telements[ 0 ].UIKITinteration = 0;\n\t\telements[ 0 ].UIKITinterations = elements.length;\n\n\t\t// iterate over all DOM nodes\n\t\tfor( var i = 0; i < elements.length; i++ ) {\n\t\t\tvar element = elements[ i ];                                                                      // this element\n\t\t\tUIKIT.animate.Stop( element );                                                                    // stop any previous animations\n\t\t\tvar initialSize = parseInt( UIKIT.animate.GetCSSPropertyBecauseIE( element, options.property ) ); // the elements current size\n\t\t\tvar endSize = options.endSize;                                                                    // the element end size\n\n\t\t\tif( options.endSize === 'auto' ) {                                                                // calculate what 'auto' means in pixel\n\t\t\t\tendSize = UIKIT.animate.CalculateAuto( element, options.property );\n\t\t\t}\n\n\t\t\t// calculate our animation specs\n\t\t\tvar animationSpecs = CalculateAnimationSpecs( initialSize, endSize, speed );\n\t\t\tvar iterateCounter = initialSize;\n\n\t\t\t// set state\n\t\t\tif( animationSpecs.stepSize < 0 ) {\n\t\t\t\telement.UIKITtoggleState = 'closing';\n\t\t\t}\n\t\t\telse if( animationSpecs.stepSize > 0 ) {\n\t\t\t\telement.UIKITtoggleState = 'opening';\n\t\t\t}\n\n\t\t\t// scoping variable\n\t\t\t(function( element, initialSize, iterateCounter, animationSpecs, endSize ) {\n\t\t\t\t// keep track of animation by adding it to the DOM element\n\t\t\t\telement.UIKITanimation = setInterval( function() {\n\n\t\t\t\t\t// when we are at the end\n\t\t\t\t\tif( initialSize === endSize || animationSpecs.steps === 0 ) {\n\t\t\t\t\t\tUIKIT.animate.Stop( element );\n\n\t\t\t\t\t\telement.style[ options.property ] = endSize + 'px'; // set to endSize\n\t\t\t\t\t\telement.UIKITtoggleState = '';\n\n\t\t\t\t\t\telements[ 0 ].UIKITinteration ++;\n\n\t\t\t\t\t\t// removing auto so CSS can take over\n\t\t\t\t\t\tif( options.endSize === 'auto' ) {\n\t\t\t\t\t\t\telement.style[ options.property ] = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// when all iterations have finished, run the callback\n\t\t\t\t\t\tif( elements[ 0 ].UIKITinteration >= elements[ 0 ].UIKITinterations ) {\n\t\t\t\t\t\t\treturn options.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if we are still animating\n\t\t\t\t\telse {\n\t\t\t\t\t\titerateCounter += animationSpecs.stepSize;\n\t\t\t\t\t\telement.style[ options.property ] = iterateCounter + 'px';\n\n\t\t\t\t\t\tanimationSpecs.steps --;\n\t\t\t\t\t}\n\n\t\t\t\t}, Math.abs( animationSpecs.intervalTime ) );\n\t\t\t})( element, initialSize, iterateCounter, animationSpecs, endSize );\n\t\t}\n\t};\n\n\n\t/**\n\t * Toggle animation\n\t *\n\t * @param  {object}         options              - The options for the animation\n\t * @param  {object}         options.element      - Element/s we are animating (DOM nodes)\n\t * @param  {string}         options.property     - The CSS property to animate [optional] [default: 'height']\n\t * @param  {integer|string} options.closeSize    - The size the element should close to. Can be 'auto' or pixel value [optional] [default: 0]\n\t * @param  {integer|string} options.openSize     - The size the element should open to. Can be 'auto' or pixel value [optional] [default: 'auto']\n\t * @param  {integer}        options.speed        - The speed of the animation in milliseconds [optional] [default: 250]\n\t * @param  {function}       options.prefunction  - A function to be executed before each animation starts, passes {object} element, {string} state [optional]\n\t * @param  {function}       options.postfunction - A function to be executed after each animation ends, passes {object} element, {string} state [optional]\n\t * @param  {function}       options.callback     - A function to be executed after the animation ends, passes {object} element, {string} state [optional]\n\t *\n\t * @return {unknown}                          - The return value passed on from our options.callback function [optional]\n\t */\n\tanimate.Toggle = function( options ) {\n\n\t\tvar elements = options.element;\n\t\tvar property = options.property || 'height';\n\t\tvar speed = options.speed || 250;\n\t\tvar closeSize = options.closeSize || 0;\n\t\tvar openSize = options.openSize || 'auto'\n\n\t\t// making a single DOM element iteratable\n\t\tif( elements.length === undefined ) {\n\t\t\telements = [ elements ];\n\t\t}\n\n\t\t// making a prefunction if none was provided\n\t\tif( typeof options.prefunction !== 'function' ) {\n\t\t\toptions.prefunction = function() {};\n\t\t}\n\n\t\t// making a postfunction if none was provided\n\t\tif( typeof options.postfunction !== 'function' ) {\n\t\t\toptions.postfunction = function() {};\n\t\t}\n\n\t\t// making a callback if none was provided\n\t\tif( typeof options.callback !== 'function' ) {\n\t\t\toptions.callback = function() {};\n\t\t}\n\n\t\t// adding iteration counts\n\t\telements[ 0 ].UIKITtoggleInteration = 0;\n\t\telements[ 0 ].UIKITtoggleInterations = elements.length;\n\n\t\t// iterate over all DOM nodes\n\t\tfor( var i = 0; i < elements.length; i++ ) {\n\t\t\tvar element = elements[ i ];\n\n\t\t\tUIKIT.animate.Stop( element );\n\n\t\t\tvar targetSize;     // the size the element should open/close to after toggle is clicked\n\t\t\tvar preState = '';  // the state we animate to for the prefunction and callback functions\n\t\t\tvar postState = ''; // the state we animate to for the prefunction and callback functions\n\t\t\tvar currentSize = parseInt( UIKIT.animate.GetCSSPropertyBecauseIE( element, options.property ) ); // the current size of the element\n\n\t\t\tif( currentSize === closeSize || element.UIKITtoggleState === 'closing' ) {\n\t\t\t\ttargetSize = openSize;\n\t\t\t\tpreState = 'opening';\n\t\t\t\tpostState = 'open';\n\t\t\t}\n\t\t\telse if( currentSize !== closeSize || element.UIKITtoggleState === 'opening' ) {\n\t\t\t\ttargetSize = closeSize;\n\t\t\t\tpreState = 'closing';\n\t\t\t\tpostState = 'closed';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new Error('UIKIT.animate.Toggle cannot determine state of element');\n\t\t\t}\n\n\t\t\t// run prefunction once per element\n\t\t\toptions.prefunction( element, preState );\n\n\t\t\t// shoot off animation\n\t\t\tUIKIT.animate.Run({\n\t\t\t\telement: element,\n\t\t\t\tendSize: targetSize,\n\t\t\t\tproperty: property,\n\t\t\t\tspeed: speed,\n\t\t\t\tcallback: function() { // making sure we fire the callback only once\n\t\t\t\t\telements[ 0 ].UIKITtoggleInteration ++;\n\n\t\t\t\t\tif( elements[ 0 ].UIKITtoggleInteration === elements[ 0 ].UIKITinterations ) {\n\t\t\t\t\t\tvar returnParam = options.callback( element, postState );\n\n\t\t\t\t\t\t// run postfunction once per element\n\t\t\t\t\t\toptions.postfunction( element, postState );\n\n\t\t\t\t\t\treturn returnParam;\n\t\t\t\t\t}\n\n\t\t\t\t\t// run postfunction once per element\n\t\t\t\t\toptions.postfunction( element, postState );\n\t\t\t\t},\n\t\t\t});\n\n\t\t}\n\t};\n\n\n\tUIKIT.animate = animate;\n\n}( UIKIT ));\n\n\nif( typeof module !== 'undefined' ) {\n\tmodule.exports = UIKIT;\n}\n\r\n"]}